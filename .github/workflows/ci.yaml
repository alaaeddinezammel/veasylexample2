name: Deploy Apigee Proxy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Auth to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/508284363122/locations/global/workloadIdentityPools/github-pool/providers/github-provider-v2'
          service_account: 'sa-ci-cd-github@primal-gate-456620-t1.iam.gserviceaccount.com'

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Get API name from XML
        id: get_api_name
        run: |
          sudo apt-get update && sudo apt-get install -y libxml2-utils zip
          XML_FILE=$(find ./apiproxy -maxdepth 1 -name '*.xml' | head -n 1)
          API_NAME=$(xmllint --xpath 'string(//APIProxy/@name)' "$XML_FILE")
          echo "api_name=$API_NAME" >> $GITHUB_OUTPUT

      - name: Get currently deployed revision
        id: get_current_revision
        run: |
          API_NAME="${{ steps.get_api_name.outputs.api_name }}"
          ORG="primal-gate-456620-t1"
          TOKEN="${{ steps.auth.outputs.access_token }}"

          CURRENT=$(curl -s -H "Authorization: Bearer $TOKEN" \
            "https://apigee.googleapis.com/v1/organizations/$ORG/environments/eval/apis/$API_NAME/deployments" \
            | jq -r '.deployments[0].revision')

          echo "current_revision=$CURRENT" >> $GITHUB_OUTPUT

      - name: Zip Apigee proxy bundle
        run: |
          zip -r proxy.zip apiproxy

      - name: Import proxy to Apigee
        id: import_proxy
        run: |
          API_NAME="${{ steps.get_api_name.outputs.api_name }}"
          ORG="primal-gate-456620-t1"
          TOKEN="${{ steps.auth.outputs.access_token }}"

          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: multipart/form-data" \
            -F "file=@proxy.zip" \
            "https://apigee.googleapis.com/v1/organizations/$ORG/apis?action=import&name=$API_NAME")

          echo "$RESPONSE" | grep -q '"error"' && exit 1
          REVISION=$(echo "$RESPONSE" | grep -oP '"revision"\s*:\s*"\K[0-9]+')
          echo "revision=$REVISION" >> $GITHUB_OUTPUT

      - name: Deploy to eval environment
        run: |
          API_NAME="${{ steps.get_api_name.outputs.api_name }}"
          REVISION="${{ steps.import_proxy.outputs.revision }}"
          ORG="primal-gate-456620-t1"
          TOKEN="${{ steps.auth.outputs.access_token }}"

          curl -s -X POST \
            -H "Authorization: Bearer $TOKEN" \
            "https://apigee.googleapis.com/v1/organizations/$ORG/environments/eval/apis/$API_NAME/revisions/$REVISION/deployments"

      - name: Install Newman
        run: |
          npm install -g newman

      - name: Run Postman E2E Tests
        id: run_tests
        run: |
          API_NAME="${{ steps.get_api_name.outputs.api_name }}"
          ENV="eval"
          COLLECTION_PATH=$(find testE2E -type f -name "${API_NAME}*.postman_collection.json" | head -n 1)
          
          if [[ -z "$COLLECTION_PATH" ]]; then
          echo "‚ùå No Postman collection found for API: $API_NAME"
          exit 1
          fi

          BASE_URL="https://${API_NAME}-eval-dot-primal-gate-456620-t1.apigee.net"

          if [[ ! -f "$COLLECTION_PATH" ]]; then
            echo "‚ùå Collection not found: $COLLECTION_PATH"
            exit 1
          fi

          echo "‚ñ∂Ô∏è Running tests on $BASE_URL..."
          newman run "$COLLECTION_PATH" \
            --env-var "baseUrl=$BASE_URL" \
            --reporters cli

      - name: Rollback if tests fail
        if: failure()
        run: |
          echo "‚ùå Tests failed ‚Äî starting rollback..."
          API_NAME="${{ steps.get_api_name.outputs.api_name }}"
          PREV_REVISION="${{ steps.get_current_revision.outputs.current_revision }}"
          NEW_REVISION="${{ steps.import_proxy.outputs.revision }}"
          ORG="primal-gate-456620-t1"
          TOKEN="${{ steps.auth.outputs.access_token }}"

          if [[ -z "$PREV_REVISION" ]]; then
            echo "‚ö†Ô∏è No previous revision found. Cannot rollback."
            exit 1
          fi

          echo "‚ñ∂Ô∏è Undeploying broken revision $NEW_REVISION..."
          curl -s -X DELETE \
            -H "Authorization: Bearer $TOKEN" \
            "https://apigee.googleapis.com/v1/organizations/$ORG/environments/eval/apis/$API_NAME/revisions/$NEW_REVISION/deployments"

          echo "üîÅ Rolling back to revision $PREV_REVISION..."
          curl -s -X POST \
            -H "Authorization: Bearer $TOKEN" \
            "https://apigee.googleapis.com/v1/organizations/$ORG/environments/eval/apis/$API_NAME/revisions/$PREV_REVISION/deployments"

          echo "‚úÖ Rollback to revision $PREV_REVISION completed"
